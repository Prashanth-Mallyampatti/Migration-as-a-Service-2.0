---
# ************************* Master tasks *********************** #
- hosts: main
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python2
    disk_dir: /var/lib/libvirt/images
  vars_files:
    - /root/Migration-as-a-Service-2.0/src/northbound/config_files/infrastructure/{{ tenant_name }}.yml
    - /root/Migration-as-a-Service-2.0/etc/{{ tenant_name }}/{{ tenant_name }}c1.yml

  tasks:
  - name: Build Docker Image
    docker_image:
      name: centos7
      build:
        path: ./
      state: present
      source: build

  - name: Spawning Tenant Container
    docker_container:
      name: "{{ item.1.name }}"
      image: centos7:latest
      hostname: test
      privileged: yes
      interactive: yes
      tty: yes
    with_subelements:
      - "{{ Subnet }}"
      - vms

  - name: Attach Container interface
    shell: |
      docker exec "{{ item.1.name }}" ip link show "{{ item.1.vmif }}" ; if [ $? -ne 0 ] ; then ip link set "{{ item.1.vmif }}" netns "{{ item.1.vm_pid }}" ; fi
    when: 
      - item.1.brif != []
      - item.1.name != "JOKER"
      - item.1.vmif != []
      - item.1.vm_pid != []
    with_subelements:
      - "{{ Subnet }}"
      - vms

  - name: Make the container interface up
    shell: |
      docker exec "{{ item.1.name }}" ip link set dev "{{ item.1.vmif }}" up
    when: 
      - item.1.brif != []
      - item.1.name != "JOKER"
      - item.1.vmif != []
      - item.1.vm_pid != []
    with_subelements:
      - "{{ Subnet }}"
      - vms

  - name: Run DHCLIENT
    shell: |
      docker exec "{{ item.1.name }}" dhclient "{{ item.1.vmif }}"
    when: 
      - item.1.brif != []
      - item.1.name != "JOKER"
      - item.1.vmif != []
      - item.1.vm_pid != []
    with_subelements:
      - "{{ Subnet }}"
      - vms
